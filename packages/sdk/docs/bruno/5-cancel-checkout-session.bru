meta {
  name: 5. Cancel Checkout Session (New)
  type: http
  seq: 5
}

post {
  url: {{base_url}}/checkout_sessions/{{$randomUUID}}/cancel
  body: none
  auth: none
}

headers {
  X-Request-ID: {{$randomUUID}}
}

script:pre-request {
  // Create a new session first to cancel
  const createReq = {
    url: bru.getEnvVar("base_url") + "/checkout_sessions",
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      "X-Idempotency-Key": bru.getVar("$randomUUID"),
      "X-Request-ID": bru.getVar("$randomUUID")
    },
    body: JSON.stringify({
      items: [{ id: "item_789", quantity: 1 }]
    })
  };

  // Note: Bruno doesn't support chained requests in pre-request scripts
  // You'll need to manually create a session first, then update the URL
  console.log("Create a new session first, then use its ID in the URL");
}

tests {
  test("should return 200", function() {
    expect(res.status).to.equal(200);
  });

  test("should have canceled status", function() {
    expect(res.body.status).to.equal('canceled');
  });
}

docs {
  # Cancel Checkout Session

  To test this endpoint:
  1. First run "1. Create Checkout Session" to create a new session
  2. Copy the checkout_session_id from the response
  3. Replace the UUID in the URL with the actual session ID
  4. Run this request

  Note: You cannot cancel a session that has already been completed.
}
