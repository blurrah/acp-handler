/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * This interface was referenced by `AgenticCheckoutSchemaBundle`'s JSON-Schema
 * via the `definition` "CheckoutSession".
 */
export type CheckoutSession = CheckoutSessionBase;
/**
 * This interface was referenced by `AgenticCheckoutSchemaBundle`'s JSON-Schema
 * via the `definition` "CheckoutSessionWithOrder".
 */
export type CheckoutSessionWithOrder = CheckoutSessionBase & {
  order: Order;
  [k: string]: unknown;
};

export interface AgenticCheckoutSchemaBundle {
  [k: string]: unknown;
}
/**
 * This interface was referenced by `AgenticCheckoutSchemaBundle`'s JSON-Schema
 * via the `definition` "Address".
 */
export interface Address {
  name: string;
  line_one: string;
  line_two?: string;
  city: string;
  state: string;
  country: string;
  postal_code: string;
}
/**
 * This interface was referenced by `AgenticCheckoutSchemaBundle`'s JSON-Schema
 * via the `definition` "Buyer".
 */
export interface Buyer {
  first_name: string;
  last_name: string;
  email: string;
  phone_number?: string;
}
/**
 * This interface was referenced by `AgenticCheckoutSchemaBundle`'s JSON-Schema
 * via the `definition` "Item".
 */
export interface Item {
  id: string;
  quantity: number;
}
/**
 * This interface was referenced by `AgenticCheckoutSchemaBundle`'s JSON-Schema
 * via the `definition` "PaymentProvider".
 */
export interface PaymentProvider {
  provider: "stripe";
  supported_payment_methods: "card"[];
}
/**
 * This interface was referenced by `AgenticCheckoutSchemaBundle`'s JSON-Schema
 * via the `definition` "LineItem".
 */
export interface LineItem {
  id: string;
  item: Item;
  base_amount: number;
  discount: number;
  subtotal: number;
  tax: number;
  total: number;
}
/**
 * This interface was referenced by `AgenticCheckoutSchemaBundle`'s JSON-Schema
 * via the `definition` "Total".
 */
export interface Total {
  type: "items_base_amount" | "items_discount" | "subtotal" | "discount" | "fulfillment" | "tax" | "fee" | "total";
  display_text: string;
  amount: number;
}
/**
 * This interface was referenced by `AgenticCheckoutSchemaBundle`'s JSON-Schema
 * via the `definition` "FulfillmentOptionShipping".
 */
export interface FulfillmentOptionShipping {
  type: "shipping";
  id: string;
  title: string;
  subtitle?: string;
  carrier?: string;
  earliest_delivery_time?: string;
  latest_delivery_time?: string;
  subtotal: number;
  tax: number;
  total: number;
}
/**
 * This interface was referenced by `AgenticCheckoutSchemaBundle`'s JSON-Schema
 * via the `definition` "FulfillmentOptionDigital".
 */
export interface FulfillmentOptionDigital {
  type: "digital";
  id: string;
  title: string;
  subtitle?: string;
  subtotal: number;
  tax: number;
  total: number;
}
/**
 * This interface was referenced by `AgenticCheckoutSchemaBundle`'s JSON-Schema
 * via the `definition` "MessageInfo".
 */
export interface MessageInfo {
  type: "info";
  /**
   * RFC 9535 JSONPath
   */
  param?: string;
  content_type: "plain" | "markdown";
  content: string;
}
/**
 * This interface was referenced by `AgenticCheckoutSchemaBundle`'s JSON-Schema
 * via the `definition` "MessageError".
 */
export interface MessageError {
  type: "error";
  code: "missing" | "invalid" | "out_of_stock" | "payment_declined" | "requires_sign_in" | "requires_3ds";
  /**
   * RFC 9535 JSONPath
   */
  param?: string;
  content_type: "plain" | "markdown";
  content: string;
}
/**
 * This interface was referenced by `AgenticCheckoutSchemaBundle`'s JSON-Schema
 * via the `definition` "Link".
 */
export interface Link {
  type: "terms_of_use" | "privacy_policy" | "seller_shop_policies";
  url: string;
}
/**
 * This interface was referenced by `AgenticCheckoutSchemaBundle`'s JSON-Schema
 * via the `definition` "PaymentData".
 */
export interface PaymentData {
  token: string;
  provider: "stripe";
  billing_address?: Address;
}
/**
 * This interface was referenced by `AgenticCheckoutSchemaBundle`'s JSON-Schema
 * via the `definition` "Order".
 */
export interface Order {
  id: string;
  checkout_session_id: string;
  permalink_url: string;
}
/**
 * This interface was referenced by `AgenticCheckoutSchemaBundle`'s JSON-Schema
 * via the `definition` "Refund".
 */
export interface Refund {
  type: "store_credit" | "original_payment";
  amount: number;
}
/**
 * This interface was referenced by `AgenticCheckoutSchemaBundle`'s JSON-Schema
 * via the `definition` "CheckoutSessionBase".
 */
export interface CheckoutSessionBase {
  id: string;
  buyer?: Buyer;
  payment_provider?: PaymentProvider;
  status: "not_ready_for_payment" | "ready_for_payment" | "completed" | "canceled" | "in_progress";
  currency: string;
  line_items: LineItem[];
  fulfillment_address?: Address;
  fulfillment_options: (FulfillmentOptionShipping | FulfillmentOptionDigital)[];
  fulfillment_option_id?: string;
  totals: Total[];
  messages: (MessageInfo | MessageError)[];
  links: Link[];
}
/**
 * This interface was referenced by `AgenticCheckoutSchemaBundle`'s JSON-Schema
 * via the `definition` "CheckoutSessionCreateRequest".
 */
export interface CheckoutSessionCreateRequest {
  buyer?: Buyer;
  /**
   * @minItems 1
   */
  items: [Item, ...Item[]];
  fulfillment_address?: Address;
}
/**
 * This interface was referenced by `AgenticCheckoutSchemaBundle`'s JSON-Schema
 * via the `definition` "CheckoutSessionUpdateRequest".
 */
export interface CheckoutSessionUpdateRequest {
  buyer?: Buyer;
  items?: Item[];
  fulfillment_address?: Address;
  fulfillment_option_id?: string;
}
/**
 * This interface was referenced by `AgenticCheckoutSchemaBundle`'s JSON-Schema
 * via the `definition` "CheckoutSessionCompleteRequest".
 */
export interface CheckoutSessionCompleteRequest {
  buyer?: Buyer;
  payment_data: PaymentData;
}
/**
 * This interface was referenced by `AgenticCheckoutSchemaBundle`'s JSON-Schema
 * via the `definition` "Error".
 */
export interface Error {
  type: "invalid_request" | "request_not_idempotent" | "processing_error" | "service_unavailable";
  /**
   * Implementation-defined error code
   */
  code: string;
  message: string;
  /**
   * RFC 9535 JSONPath (optional)
   */
  param?: string;
}
